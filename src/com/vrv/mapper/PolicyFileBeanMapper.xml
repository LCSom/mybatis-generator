<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vrv.mapper.PolicyFileBeanMapper" >
  <resultMap id="BaseResultMap" type="com.vrv.bean.PolicyFileBean" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="filesize" property="filesize" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="policyId" property="policyid" jdbcType="VARCHAR" />
    <result column="originalId" property="originalid" jdbcType="VARCHAR" />
    <result column="uploadTime" property="uploadtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.vrv.bean.PolicyFileBean" extends="BaseResultMap" >
    <result column="crc" property="crc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, version, filesize, path, type, policyId, originalId, uploadTime
  </sql>
  <sql id="Blob_Column_List" >
    crc
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.vrv.bean.PolicyFileBeanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cems_policy_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.vrv.bean.PolicyFileBeanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cems_policy_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cems_policy_file
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from cems_policy_file
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.vrv.bean.PolicyFileBeanExample" >
    delete from cems_policy_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vrv.bean.PolicyFileBean" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cems_policy_file (name, version, filesize, 
      path, type, policyId, 
      originalId, uploadTime, crc
      )
    values (#{name,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{filesize,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{policyid,jdbcType=VARCHAR}, 
      #{originalid,jdbcType=VARCHAR}, #{uploadtime,jdbcType=TIMESTAMP}, #{crc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vrv.bean.PolicyFileBean" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cems_policy_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="filesize != null" >
        filesize,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="policyid != null" >
        policyId,
      </if>
      <if test="originalid != null" >
        originalId,
      </if>
      <if test="uploadtime != null" >
        uploadTime,
      </if>
      <if test="crc != null" >
        crc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null" >
        #{filesize,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="policyid != null" >
        #{policyid,jdbcType=VARCHAR},
      </if>
      <if test="originalid != null" >
        #{originalid,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="crc != null" >
        #{crc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vrv.bean.PolicyFileBeanExample" resultType="java.lang.Integer" >
    select count(*) from cems_policy_file
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cems_policy_file
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.filesize != null" >
        filesize = #{record.filesize,jdbcType=INTEGER},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.policyid != null" >
        policyId = #{record.policyid,jdbcType=VARCHAR},
      </if>
      <if test="record.originalid != null" >
        originalId = #{record.originalid,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadtime != null" >
        uploadTime = #{record.uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.crc != null" >
        crc = #{record.crc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update cems_policy_file
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      filesize = #{record.filesize,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      policyId = #{record.policyid,jdbcType=VARCHAR},
      originalId = #{record.originalid,jdbcType=VARCHAR},
      uploadTime = #{record.uploadtime,jdbcType=TIMESTAMP},
      crc = #{record.crc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cems_policy_file
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      filesize = #{record.filesize,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      policyId = #{record.policyid,jdbcType=VARCHAR},
      originalId = #{record.originalid,jdbcType=VARCHAR},
      uploadTime = #{record.uploadtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vrv.bean.PolicyFileBean" >
    update cems_policy_file
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="filesize != null" >
        filesize = #{filesize,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="policyid != null" >
        policyId = #{policyid,jdbcType=VARCHAR},
      </if>
      <if test="originalid != null" >
        originalId = #{originalid,jdbcType=VARCHAR},
      </if>
      <if test="uploadtime != null" >
        uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      </if>
      <if test="crc != null" >
        crc = #{crc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.vrv.bean.PolicyFileBean" >
    update cems_policy_file
    set name = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      filesize = #{filesize,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      policyId = #{policyid,jdbcType=VARCHAR},
      originalId = #{originalid,jdbcType=VARCHAR},
      uploadTime = #{uploadtime,jdbcType=TIMESTAMP},
      crc = #{crc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vrv.bean.PolicyFileBean" >
    update cems_policy_file
    set name = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      filesize = #{filesize,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      policyId = #{policyid,jdbcType=VARCHAR},
      originalId = #{originalid,jdbcType=VARCHAR},
      uploadTime = #{uploadtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>